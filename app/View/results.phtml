<?php

use App\AZervo;
use App\Model\View;

$_currentPage = $_GET["page"] ?? 1;
$_results = AZervo::getModel("api_crossref")->getResultsFound($_currentPage);
$_totalPages = ceil($_results["total_items"] / View::PAGINATION['items_per_page']);

?>
<div class="row page results">
    <?php if ($_results['total_items'] > 0): ?>
        <nav aria-label="Navegar">
            <?php echo AZervo::getModel('view')->getPaginationHeaderHTML($_results["total_items"]);?>
            <?php echo AZervo::getModel('view')->getPaginationHTML($_results["total_items"], $_currentPage);?>
        </nav>
        <table class="table table-striped">
            <thead>
            <tr>
                <th style="min-width: 75%; width: 75%" scope="col">Documento</th>
                <th style="min-width: 25%; width: 25%" scope="col">Links</th>
                <?php if(AZervo::getModel('user')->userLoggedIn()):?>
                <th style="min-width: 25%; width: 25%" scope="col">Ações</th>
                <?php endif;?>
            </tr>
            </thead>
            <tbody>
            <?php
            $loadingGif = AZervo::getSkinUrl('images/loading.gif');
            foreach ($_results["items"] as $item) {
                $actions = "";
                if(AZervo::getModel('user')->userLoggedIn()) {
                    $savedDocuments = AZervo::getModel('user')->getSavedDocuments();
                    if(!isset($savedDocuments[$item['doi']])) {
                        $actions = "<td class='actions'><i class='fa fa-star-o save-document'></i></td>";
                    } else {
                        $actions = "<td class='actions'><i class='fa fa-star unsave-document' document='{$savedDocuments[$item['doi']]}'></i></td>";
                    }
                }
                echo "<tr class='result' doi='{$item['doi']}'>
                <td>
                    <p><b>DOI:</b> {$item['doi']}</p>
                    <p><b>Título:</b> {$item['title']}</p>
                    <p><b>Autores:</b> {$item['author']}</p>
                    <p><b>Assunto:</b> {$item['subject']}</p>
                    <p><b>Tipo:</b> {$item['type']}</p>
                    <p><b>ISBN:</b> {$item['isbn']}</p>
                </td>
                <td class='results-links'><img class='loading-gif' src='$loadingGif' alt=''></td>
                $actions 
            </tr>";
            }
            ?>
            </tbody>
        </table>
        <nav aria-label="Navegar">
        <?php echo AZervo::getModel('view')->getPaginationHTML($_results["total_items"], $_currentPage);?>
        </nav>
    <?php else: # If no result found
        AZervo::loadBlocK('noResult');
    endif; ?>
</div>

<script type="text/javascript">
    function replaceQueryParam(param, newval, search) {
        const regex = new RegExp("([?;&])" + param + "[^&;]*[;&]?");
        const query = search.replace(regex, "$1").replace(/&$/, '');

        return (query.length > 2 ? query + "&" : "?") + (newval ? param + "=" + newval : '');
    }

    document.addEventListener("DOMContentLoaded", function () {
        let currentPage = jQuery(".page-item.active").attr("page")
        let maxPage = "<?php echo $_totalPages?>"
        let nextPageBtn = jQuery(".next-page")
        let previousPageBtn = jQuery(".previous-page")
        if (currentPage === "1") {
            previousPageBtn.addClass("disabled")
        }
        if (currentPage === maxPage) {
            nextPageBtn.addClass("disabled")
        }

        function paginate(newPage) {
            let windowLocation = window.location.href.split('?')[0]
            let params = replaceQueryParam('page', newPage, window.location.search)
            let newUrl = windowLocation + params
            window.location.replace(newUrl)
        }

        jQuery(".page-item").click(function () {
            let newPage = jQuery(this).attr("page")
            paginate(newPage)
        })

        nextPageBtn.click(function () {
            let newPage = parseInt(currentPage) + 1
            paginate(newPage)
        })
        previousPageBtn.click(function () {
            let newPage = parseInt(currentPage) - 1
            paginate(newPage)
        })

        jQuery(".result").each(function () {
            let doi = jQuery(this).attr("doi")
            let $this = this
            jQuery.ajax({
                url: '<?php echo AZervo::getUrl("search", "inDatasets")?>',
                method: "POST",
                data: {
                    doi: doi
                },
                dataType: "json",
                success: function (results) {
                    let resultsEl = jQuery($this).find('.results-links')
                    jQuery(resultsEl).html("<ul class='list-group list-group-flush links-list'></ul>")
                    jQuery.each(results, function (dataset, url) {
                        let linksListEl = jQuery($this).find('.links-list')
                        jQuery(linksListEl).append(`<li class="list-group-item">${url}</li>`)
                    })
                }
            })
        })

        jQuery(document).on('click', '.save-document', function () {
            let $this = this
            let documentRow = jQuery(this).parent().parent()
            let documentDOI = documentRow.attr("doi")
            let documentLinks = []
            documentRow.find(".results-links > ul").each(function () {
                if(jQuery(this).find("a")) {
                    documentLinks.push(jQuery(this).find("a").attr("href"))
                }
            })
            jQuery.ajax({
                url: '<?php echo AZervo::getUrl('user', 'saveDocument') ?>',
                method: 'POST',
                data: {
                    doi: documentDOI,
                    links: documentLinks.join(";")
                },
                success: function (data) {
                    jQuery($this).removeClass('fa-star-o save-document')
                    jQuery($this).addClass('fa-star unsave-document')
                }
            })
        })

        jQuery(document).on('click', '.unsave-document', function () {
            let $this = this
            let documentId = jQuery(this).attr('document')
            jQuery.ajax({
                url: '<?php echo AZervo::getUrl('user', 'unsaveDocument') ?>',
                method: 'POST',
                data: {
                    id: documentId,
                },
                success: function (data) {
                    jQuery($this).removeClass('fa-star unsave-document')
                    jQuery($this).addClass('fa-star-o save-document')
                }
            })
        })
    })
</script>