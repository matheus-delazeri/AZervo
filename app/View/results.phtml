<?php

use App\AZervo;
use App\Model\Api\Crossref;

$_currentPage = $_GET["page"] ?? 1;
$_results = AZervo::getModel("api_crossref")->getResultsFound($_currentPage);
$_itemsPerPage = Crossref::ITEMS_PER_PAGE;
$_totalPages = ceil($_results["total_items"] / $_itemsPerPage);
$_maxPageLinks = 15;
?>
<html lang="">
<?php AZervo::loadBlock("header") ?>
<body>
<?php AZervo::loadBlock("topHeader") ?>
<div class="row results-page">
    <?php if($_results['total_items'] > 0): ?>
    <nav aria-label="Navegar">
        <p style="margin: 0;text-align: center">Total de itens encontrados: <b><?php echo $_results['total_items']?></b></p>
        <p style="text-align: center">Total de páginas: <b><?php echo $_totalPages?></b></p>
        <ul class="pagination">
            <li class="page-item previous-page">
                <a class="page-link" href="#" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                    <span class="sr-only">Previous</span>
                </a>
            </li>
            <?php
            $_pageStart = 1;
            if ($_currentPage >= $_maxPageLinks) {
                $_pageStart = $_currentPage - $_maxPageLinks + 2;
            }
            if ($_currentPage == $_totalPages && $_maxPageLinks <= $_totalPages) {
                $_pageStart = $_currentPage - $_maxPageLinks + 1;
            }
            if ($_maxPageLinks > $_totalPages) {
                $_maxPageLinks = $_totalPages;
            }
            for ($page = 0; $page < $_maxPageLinks; $page++) {
                $pageNum = $_pageStart + $page;
                $activeClass = $pageNum == $_currentPage ? "active" : "";
                echo "
                    <li class='page-item $activeClass' page='$pageNum'>
                        <a class='page-link' href='#'>$pageNum</a>
                    </li>
                ";
            } ?>
            <li class="page-item next-page">
                <a class="page-link" href="#" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                    <span class="sr-only">Next</span>
                </a>
            </li>
        </ul>
    </nav>
    <table class="table table-striped">
        <thead>
        <tr>
            <th style="min-width: 75%; width: 75%" scope="col">Documento</th>
            <th style="min-width: 25%; width: 25%" scope="col">Links</th>
        </tr>
        </thead>
        <tbody>
        <?php
        $loadingGif = AZervo::getSkinUrl('images/loading.gif');
        foreach ($_results["items"] as $item) {
            echo "<tr class='result' doi='{$item['doi']}'>
                <td>
                    <p><b>DOI:</b> {$item['doi']}</p>
                    <p><b>Título:</b> {$item['title']}</p>
                    <p><b>Autores:</b> {$item['author']}</p>
                    <p><b>Assunto:</b> {$item['subject']}</p>
                    <p><b>Tipo:</b> {$item['type']}</p>
                    <p><b>ISBN:</b> {$item['isbn']}</p>
                </td>
                <td class='results-links'><img class='loading-gif' src='$loadingGif' alt=''></td>
            </tr>";
        }
        ?>
        </tbody>
    </table>
    <?php else: # If no result found
        AZervo::loadBlocK('noResult');
    endif;?>
</div>

<script type="text/javascript">
    function replaceQueryParam(param, newval, search) {
        const regex = new RegExp("([?;&])" + param + "[^&;]*[;&]?");
        const query = search.replace(regex, "$1").replace(/&$/, '');

        return (query.length > 2 ? query + "&" : "?") + (newval ? param + "=" + newval : '');
    }

    document.addEventListener("DOMContentLoaded", function () {
        let currentPage = jQuery(".page-item.active").attr("page")
        let maxPage = "<?php echo $_totalPages?>"
        let nextPageBtn = jQuery(".next-page")
        let previousPageBtn = jQuery(".previous-page")
        if (currentPage === "1") {
            previousPageBtn.addClass("disabled")
        }
        if (currentPage === maxPage) {
            nextPageBtn.addClass("disabled")
        }

        function paginate(newPage) {
            let windowLocation = window.location.href.split('?')[0]
            let params = replaceQueryParam('page', newPage, window.location.search)
            let newUrl = windowLocation + params
            window.location.replace(newUrl)
        }

        jQuery(".page-item").click(function () {
            let newPage = jQuery(this).attr("page")
            paginate(newPage)
        })

        nextPageBtn.click(function () {
            let newPage = parseInt(currentPage) + 1
            paginate(newPage)
        })
        previousPageBtn.click(function () {
            let newPage = parseInt(currentPage) - 1
            paginate(newPage)
        })

        jQuery(".result").each(function () {
            let doi = jQuery(this).attr("doi")
            let $this = this
            jQuery.ajax({
                url: '<?php echo AZervo::getUrl("search", "inDatasets")?>',
                method: "POST",
                data: {
                    doi: doi
                },
                dataType: "json",
                error: function (error) {
                    let resultsEl = jQuery($this).find('.results-links')
                    jQuery(resultsEl).html("Tempo excedido")
                },
                success: function (results) {
                    let resultsEl = jQuery($this).find('.results-links')
                    jQuery(resultsEl).html("<ul class='list-group list-group-flush links-list'></ul>")
                    jQuery.each(results, function (dataset, url) {
                        let linksListEl = jQuery($this).find('.links-list')
                        jQuery(linksListEl).append(`<li class="list-group-item">${url}</li>`)
                    })
                },
                timeout: 60000
            })
        })
    })
</script>
</body>
</html>